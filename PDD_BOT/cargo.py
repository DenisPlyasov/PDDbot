from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import ContextTypes
import os
import random


main_cargos = [
    {
        "name": "üî∏ 1. –ù–µ–º–Ω–æ–≥–æ —Ç–µ–æ—Ä–∏–∏",
        "description": f"–ü–ª–æ—Ö–∞—è –ø–æ–≥–æ–¥–∞ ‚Äî —ç—Ç–æ –¥–æ–∂–¥—å, —Å–Ω–µ–≥, —Ç—É–º–∞–Ω, –≥–æ–ª–æ–ª—ë–¥, —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å (–º–µ–Ω–µ–µ 300 –º).\n–ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –≤ –ø–ª–æ—Ö—É—é –ø–æ–≥–æ–¥—É ‚Äî –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–µ–±–µ –∏ –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –¥–≤–∏–∂–µ–Ω–∏—è.",
    },
    {
        "name": "üî∏ 2. –ï—Å–ª–∏ —Ç—ã –ø–æ–ø–∞–ª –≤ –∞–≤–∞—Ä–∏—é, —Å–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:",
        "description": f"‚Ä¢	–°–Ω–∏–∑—å —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É–≤–µ–ª–∏—á—å –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –¥–æ –≤–ø–µ—Ä–µ–¥–∏ –∏–¥—É—â–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.\n‚Ä¢	–í–∫–ª—é—á–∏ –±–ª–∏–∂–Ω–∏–π —Å–≤–µ—Ç —Ñ–∞—Ä –∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–æ—Ç—É–º–∞–Ω–Ω—ã–µ —Ñ–∞—Ä—ã.\n‚Ä¢	–ò–∑–±–µ–≥–∞–π —Ä–µ–∑–∫–∏—Ö –º–∞–Ω—ë–≤—Ä–æ–≤ ‚Äî —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–≤–æ—Ä–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è–π –ø–ª–∞–≤–Ω–æ.\n‚Ä¢	–ù–∞ —Å–∫–æ–ª—å–∑–∫–æ–π –¥–æ—Ä–æ–≥–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–µ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–º –∏ –ø–ª–∞–≤–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –ø–µ–¥–∞–ª–∏.\n‚Ä¢	–í —Å–∏–ª—å–Ω—ã–π –±–æ–∫–æ–≤–æ–π –≤–µ—Ç–µ—Ä –¥–µ—Ä–∂–∏ —Ä—É–ª—å –∫—Ä–µ–ø—á–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –æ–±–≥–æ–Ω–µ –∏ –≤—ã–µ–∑–¥–µ –∏–∑-–∑–∞ —É–∫—Ä—ã—Ç–∏–π.\nn‚Ä¢	–í —Ç—É–º–∞–Ω–µ –∏ —Å–Ω–µ–≥–æ–ø–∞–¥–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –ø–æ —Ä–∞–∑–º–µ—Ç–∫–µ –∏ –∫—Ä–∞—é –ø—Ä–æ–µ–∑–∂–µ–π —á–∞—Å—Ç–∏.",
    },
    {
        "name": "üî∏ 3. –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ –µ–≤—Ä–æ–ø—Ä–æ—Ç–æ–∫–æ–ª—É:",
        "description": f"‚Ä¢	–ù–µ—Ç –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö.\n‚Ä¢	–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ 2 –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n‚Ä¢	–£—â–µ—Ä–± –¥–æ 400 000 —Ä—É–±. (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –û–°–ê–ì–û).\n‚Ä¢	–í–æ–¥–∏—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –∏ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –±–ª–∞–Ω–∫ –∏–∑–≤–µ—â–µ–Ω–∏—è –æ –î–¢–ü.",
    },
]


from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes

def get_cargos_text(theory, index, total):
    return f"*{theory['name']}*\n\n{theory['description']}\n\n–¢–µ–æ—Ä–∏—è {index + 1} –∏–∑ {total}"

user_message_ids = {}


def get_cargos_keyboard(index, total):
    buttons = []

    if index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"cargos_{index - 1}"))

    if index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"cargos_{index + 1}"))

    if index == total - 1:
        buttons.append(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É", callback_data=f"start_test"))

    # –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
    buttons.append(InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data="back_to_topics"))

    return InlineKeyboardMarkup([buttons])


async def show_cargos(update, context: ContextTypes.DEFAULT_TYPE, index: int):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    if index < 0 or index >= len(main_cargos):
        await context.bot.send_message(chat_id, "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        return

    theory = main_cargos[index]
    text = get_cargos_text(theory, index, len(main_cargos))
    keyboard = get_cargos_keyboard(index, len(main_cargos))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
    if user_id in user_message_ids:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=user_message_ids[user_id])
        except:
            pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    sent = await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

    user_message_ids[user_id] = sent.message_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫: "–î–∞–ª–µ–µ", "–ù–∞–∑–∞–¥", "–í –º–µ–Ω—é"
async def handle_cargos_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("cargos_"):
        try:
            index = int(data.split("_")[1])
            await show_cargos(update, context, index)
        except ValueError:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    elif data == "back_to_topics":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
        from main import get_topics_keyboard
        chat_id = query.message.chat_id
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:",
            reply_markup=get_topics_keyboard()
        )