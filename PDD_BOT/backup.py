from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ContextTypes,
    MessageHandler, filters, CallbackQueryHandler
)

from signs import show_warning_sign
from signs import handle_sign_callback
from signs import start_test, handle_test_answer, send_test_question
from theory import show_theory, handle_theory_callback

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (reply keyboard)
main_menu_keyboard = [
    ["üöó –í—ã—É—á–∏—Ç—å –ü–î–î"],
    ["üß† –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∏ –∑–Ω–∞–Ω–∏—è"],
    ["‚è∞ –í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"]
]
main_menu_markup = ReplyKeyboardMarkup(main_menu_keyboard, resize_keyboard=True)

# –°–ø–∏—Å–æ–∫ —Ç–µ–º
topics = [
    "1. –î–æ—Ä–æ–∂–Ω—ã–µ –∑–Ω–∞–∫–∏",
    "2. –î–æ—Ä–æ–∂–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞",
    "3. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ü–î–î",
    "4. –ü—Ä–æ–µ–∑–¥ –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–≤",
    "5. –ü–µ—à–µ—Ö–æ–¥—ã –∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç—ã",
    "6. –ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–µ–∑–¥—ã",
    "7. –°–≤–µ—Ç–æ—Ñ–æ—Ä—ã –∏ —Å–∏–≥–Ω–∞–ª—ã —Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫–∞",
    "8. –ê–≤–∞—Ä–∏–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –î–¢–ü",
    "9. –ü–µ—Ä–µ–≤–æ–∑–∫–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏ –≥—Ä—É–∑–æ–≤",
    "10. –í–æ–∂–¥–µ–Ω–∏–µ –≤ –ø–ª–æ—Ö—É—é –ø–æ–≥–æ–¥—É",
    "11. –ú–µ–¥–ø–æ–º–æ—â—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
    "12. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è"
]

test_topics = [
    "1. –î–æ—Ä–æ–∂–Ω—ã–µ –∑–Ω–∞–∫–∏",
    "2. –î–æ—Ä–æ–∂–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞",
    "3. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ü–î–î",
    "4. –ü—Ä–æ–µ–∑–¥ –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–æ–≤",
    "5. –ü–µ—à–µ—Ö–æ–¥—ã –∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç—ã",
    "6. –ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–µ–∑–¥—ã",
    "7. –°–≤–µ—Ç–æ—Ñ–æ—Ä—ã –∏ —Å–∏–≥–Ω–∞–ª—ã —Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫–∞",
    "8. –ê–≤–∞—Ä–∏–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –î–¢–ü",
    "9. –ü–µ—Ä–µ–≤–æ–∑–∫–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∏ –≥—Ä—É–∑–æ–≤",
    "10. –í–æ–∂–¥–µ–Ω–∏–µ –≤ –ø–ª–æ—Ö—É—é –ø–æ–≥–æ–¥—É",
    "11. –ú–µ–¥–ø–æ–º–æ—â—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
    "12. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è"
]



knowledge_check_keyboard = [
    ["üìò –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ"],
    ["üßæ –†–µ–∂–∏–º —ç–∫–∑–∞–º–µ–Ω–∞"],
    ["üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
]
knowledge_check_markup = ReplyKeyboardMarkup(knowledge_check_keyboard, resize_keyboard=True)

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–º—ã –≤ Inline-–∫–Ω–æ–ø–∫–∏
def get_topics_keyboard():
    keyboard = []
    for i, topic in enumerate(topics, start=1):
        keyboard.append([InlineKeyboardButton(text=topic, callback_data=f"topic_{i}")])
    return InlineKeyboardMarkup(keyboard)

def get_test_topics_keyboard():
    keyboard = []
    for i, theme in enumerate(test_topics, start=1):
        data = f"theme_{i}"
        keyboard.append([InlineKeyboardButton(text=theme, callback_data=data)])
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_first_name = update.effective_user.first_name
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_first_name}!\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã—É—á–∏—Ç—å –ü–î–î –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É.\n\n"
        "–í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å:"
    )
    await update.message.reply_text(welcome_text, reply_markup=main_menu_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def handle_menu_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üöó –í—ã—É—á–∏—Ç—å –ü–î–î":
        await update.message.reply_text("üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:", reply_markup=get_topics_keyboard())
    elif text == "üß† –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∏ –∑–Ω–∞–Ω–∏—è":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:", reply_markup=knowledge_check_markup)
    elif text == "‚è∞ –í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è":
        await update.message.reply_text("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ.")
    elif text == "üìò –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ":
        await update.message.reply_text("üìö –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∞:", reply_markup=get_test_topics_keyboard())
    elif text == "üßæ –†–µ–∂–∏–º —ç–∫–∑–∞–º–µ–Ω–∞":
        await update.message.reply_text("üõ† –†–µ–∂–∏–º —ç–∫–∑–∞–º–µ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    elif text == "üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await update.message.reply_text("üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_markup)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —Ç–µ–º—ã (callback –∫–Ω–æ–ø–∫–∏)
async def handle_topic_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    topic = query.data

    if topic == "topic_1":
        await show_warning_sign(update, context, index=0)
    if topic == "topic_3":
        await show_theory(update, context, index=0)

async def handle_theme_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    theme = query.data

    if theme == "theme_1":
        print('Got callback:', theme)
        await send_test_question(update, context)
    if theme == "theme_3":
        await send_test_question(update, context)
    else:
        await query.edit_message_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–∞–Ω–Ω–∞—è —Ç–µ–º–∞ –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    import os

    TOKEN = "8156068493:AAGHQPzuMaFMNf7XgdCyNHGLfiQYq9fGzFQ"  # <-- –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu_selection))
    app.add_handler(CallbackQueryHandler(handle_topic_selection, pattern=r"^topic_\d+$"))
    app.add_handler(CallbackQueryHandler(handle_theme_selection, pattern=r"^theme_\d+$"))
    app.add_handler(CallbackQueryHandler(handle_test_answer, pattern=r"^quiz_answer\|"))
    app.add_handler(CallbackQueryHandler(show_theory, pattern=r"^theory_\+$"))
    app.add_handler(CallbackQueryHandler(handle_theory_callback, pattern="^theory_\\d+$|^back_to_topics$"))
    app.add_handler(CallbackQueryHandler(handle_sign_callback))
    app.add_handler(CallbackQueryHandler(handle_menu_selection))



    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()