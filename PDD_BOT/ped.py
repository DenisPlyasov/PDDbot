from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import ContextTypes
import os
import random


main_ped = [
    {
        "name": "üî∏ 1. –ü—Ä–∞–≤–∞ –ø–µ—à–µ—Ö–æ–¥–æ–≤",
        "description": f"‚Ä¢	–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ—Ä–æ–≥—É –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥—É.\n‚Ä¢	–ù–∞ —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ ‚Äî –ø–æ –∑–µ–ª—ë–Ω–æ–º—É —Å–∏–≥–Ω–∞–ª—É.\n‚Ä¢	–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ ‚Äî –ø–æ –∫—Ä–∞—Ç—á–∞–π—à–µ–º—É –ø—É—Ç–∏ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ –ø—Ä–æ–µ–∑–∂–µ–π —á–∞—Å—Ç–∏, —É–±–µ–¥–∏–≤—à–∏—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
    },
    {
        "name": "üî∏ 2. –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤–æ–¥–∏—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø–µ—à–µ—Ö–æ–¥–∞–º–∏",
        "description": f"‚Ä¢	–£—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –ø–µ—à–µ—Ö–æ–¥–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö (–≤ —Ç–æ–º —á–∏—Å–ª–µ –Ω–µ—Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã—Ö).\n‚Ä¢	–ü—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ —É—Å—Ç—É–ø–∏—Ç—å –ø–µ—à–µ—Ö–æ–¥–∞–º, –ø–µ—Ä–µ—Ö–æ–¥—è—â–∏–º –¥–æ—Ä–æ–≥—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—å.\n‚Ä¢	–°–Ω–∏–∂–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –∂–∏–ª—ã–º –∑–æ–Ω–∞–º, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º –∏ –¥–µ—Ç—Å–∫–∏–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º.",
    },
    {
        "name": "üî∏ 3. –î–≤–∏–∂–µ–Ω–∏–µ –≤ –∂–∏–ª–æ–π –∑–æ–Ω–µ",
        "description": f"‚Ä¢	–ü–µ—à–µ—Ö–æ–¥—ã –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.\n‚Ä¢	–°–∫–æ—Ä–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π ‚Äî –Ω–µ –±–æ–ª–µ–µ 20 –∫–º/—á.",
    },
    {
        "name": "üî∏ 4. –í–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç - —Ç–æ–∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è",
        "description": f"‚Ä¢	–î–æ–ª–∂–µ–Ω –¥–≤–∏–≥–∞—Ç—å—Å—è –ø–æ –≤–µ–ª–æ–¥–æ—Ä–æ–∂–∫–µ –∏–ª–∏ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é –ø—Ä–æ–µ–∑–∂–µ–π —á–∞—Å—Ç–∏.\n‚Ä¢	–î–µ—Ç—è–º –¥–æ 14 –ª–µ—Ç ‚Äî –º–æ–∂–Ω–æ –µ—Ö–∞—Ç—å –ø–æ —Ç—Ä–æ—Ç—É–∞—Ä—É –∏–ª–∏ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–π –¥–æ—Ä–æ–∂–∫–µ.\n‚Ä¢	–ü–µ—Ä–µ–µ–∑–∂–∞—Ç—å –ø–µ—à–µ—Ö–æ–¥–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ –Ω–µ–ª—å–∑—è ‚Äî –≤–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç –æ–±—è–∑–∞–Ω —Å–ø–µ—à–∏—Ç—å—Å—è –∏ –ø–µ—Ä–µ–π—Ç–∏ –ø–µ—à–∫–æ–º.",
    },
    {
        "name": "üî∏ 5. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏",
        "description": f"‚Ä¢	–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∑–Ω–∞–∫–æ–≤ ¬´–ü–µ—à–µ—Ö–æ–¥–Ω–∞—è –¥–æ—Ä–æ–∂–∫–∞¬ª –∏–ª–∏ ¬´–í–µ–ª–æ–ø–µ—à–µ—Ö–æ–¥–Ω–∞—è –¥–æ—Ä–æ–∂–∫–∞¬ª –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—è–∑–∞–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–æ –Ω–∏–º.\n‚Ä¢	–í–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –µ–∑–¥–∏—Ç—å –ø–æ –∞–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª—è–º, —Ç—Ä–æ—Ç—É–∞—Ä–∞–º (–≤–∑—Ä–æ—Å–ª—ã–º), –æ–±–æ—á–∏–Ω–∞–º –±–µ–∑ –∫—Ä–∞–π–Ω–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
    },


   
]


from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes

def get_ped_text(theory, index, total):
    return f"*{theory['name']}*\n\n{theory['description']}\n\n–¢–µ–æ—Ä–∏—è {index + 1} –∏–∑ {total}"

user_message_ids = {}


def get_ped_keyboard(index, total):
    buttons = []

    if index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"ped_{index - 1}"))

    if index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"ped_{index + 1}"))

    if index == total - 1:
        buttons.append(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É", callback_data=f"start_test"))

    # –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
    buttons.append(InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data="back_to_topics"))

    return InlineKeyboardMarkup([buttons])


async def show_ped(update, context: ContextTypes.DEFAULT_TYPE, index: int):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    if index < 0 or index >= len(main_ped):
        await context.bot.send_message(chat_id, "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        return

    theory = main_ped[index]
    text = get_ped_text(theory, index, len(main_ped))
    keyboard = get_ped_keyboard(index, len(main_ped))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
    if user_id in user_message_ids:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=user_message_ids[user_id])
        except:
            pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    sent = await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

    user_message_ids[user_id] = sent.message_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫: "–î–∞–ª–µ–µ", "–ù–∞–∑–∞–¥", "–í –º–µ–Ω—é"
async def handle_ped_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("ped_"):
        try:
            index = int(data.split("_")[1])
            await show_ped(update, context, index)
        except ValueError:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    elif data == "back_to_topics":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
        from main import get_topics_keyboard
        chat_id = query.message.chat_id
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:",
            reply_markup=get_topics_keyboard()
        )