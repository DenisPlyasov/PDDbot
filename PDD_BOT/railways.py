from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import ContextTypes
import os
import random


main_railways = [
    {
        "name": "üî∏ 1. –ù–µ–º–Ω–æ–≥–æ —Ç–µ–æ—Ä–∏–∏",
        "description": f"–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–π –ø–µ—Ä–µ–µ–∑–¥ ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –¥–æ—Ä–æ–≥–∏ —Å –∂/–¥ –ø—É—Ç—è–º–∏.\n–ù–∞ –ø–µ—Ä–µ–µ–∑–¥–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∑–¥–∞ —Å—Ç—Ä–æ–≥–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã.",
    },
    {
        "name": "üî∏ 2. –ó–∞–ø—Ä–µ—â—ë–Ω –ø—Ä–æ–µ–∑–¥ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–µ–∑–¥, –µ—Å–ª–∏:",
        "description": f"‚Ä¢	–ó–∞–∫—Ä—ã—Ç –∏–ª–∏ –æ–ø—É—Å–∫–∞–µ—Ç—Å—è —à–ª–∞–≥–±–∞—É–º.\n‚Ä¢	–ì–æ—Ä–∏—Ç –∫—Ä–∞—Å–Ω—ã–π —Å–∏–≥–Ω–∞–ª —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞.\n‚Ä¢	–ï—Å—Ç—å –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏–π—Å—è –ø–æ–µ–∑–¥ –∏–ª–∏ –¥–µ–∂—É—Ä–Ω—ã–π –ø–æ–¥–∞–ª —Å–∏–≥–Ω–∞–ª ‚Äú—Å—Ç–æ–ø‚Äù.\n‚Ä¢	–ú–∞—à–∏–Ω–∞ –Ω–µ —É—Å–ø–µ–µ—Ç –ø—Ä–æ–µ—Ö–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é (–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –∑–∞—Ç–æ—Ä).",
    },
    {
        "name": "üî∏ 3. –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤–æ–¥–∏—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–µ–∑–¥–æ–º:",
        "description": f"‚Ä¢	–°–Ω–∏–∑–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å.\n‚Ä¢	–£–±–µ–¥–∏—Ç—å—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n‚Ä¢	–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É —Å—Ç–æ–ø-–ª–∏–Ω–∏–∏, –∑–Ω–∞–∫–∞ ¬´–°—Ç–æ–ø¬ª, —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ –∏–ª–∏ —à–ª–∞–≥–±–∞—É–º–∞.\n‚Ä¢	–ü—Ä–∏ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–∞ –ø—É—Ç—è—Ö ‚Äî –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–µ—Ä–µ–µ–∑–¥ –∏ —Å–æ–æ–±—â–∏—Ç—å –¥–µ–∂—É—Ä–Ω–æ–º—É.",
    },
    {
        "name": "üî∏ 4. –ü—Ä–æ–µ–∑–¥ —Ç—Ä–∞–º–≤–∞–π–Ω—ã—Ö –ø—É—Ç–µ–π:",
        "description": f"‚Ä¢	–ù–∞ —Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã—Ö –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö —Ç—Ä–∞–º–≤–∞–π –ø–æ–¥—á–∏–Ω—è–µ—Ç—Å—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä—É.\n‚Ä¢	–ù–∞ –Ω–µ—Ä–µ–≥—É–ª–∏—Ä—É–µ–º—ã—Ö –ø–µ—Ä–µ–∫—Ä—ë—Å—Ç–∫–∞—Ö:\n   ‚Ä¢	–¢—Ä–∞–º–≤–∞–π –Ω–∞ –≥–ª–∞–≤–Ω–æ–π ‚Äî —É—Å—Ç—É–ø–∏.\n   ‚Ä¢	 –ü—Ä–∏ —Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö –¥–æ—Ä–æ–≥–∞—Ö ‚Äî —Ç—Ä–∞–º–≤–∞–π –∏–º–µ–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç.\n‚Ä¢	–†–∞–∑—Ä–µ—à—ë–Ω –æ–±—ä–µ–∑–¥ —Ç—Ä–∞–º–≤–∞—è —Å–ø—Ä–∞–≤–∞, –∞ —Å–ª–µ–≤–∞ ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–æ–º–µ—Ö –∏ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∑–Ω–∞–∫–∞–º–∏/—Ä–∞–∑–º–µ—Ç–∫–æ–π.",
    },
    {
        "name": "üî∏ 5. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏",
        "description": f"‚Ä¢	–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∑–Ω–∞–∫–æ–≤ ¬´–ü–µ—à–µ—Ö–æ–¥–Ω–∞—è –¥–æ—Ä–æ–∂–∫–∞¬ª –∏–ª–∏ ¬´–í–µ–ª–æ–ø–µ—à–µ—Ö–æ–¥–Ω–∞—è –¥–æ—Ä–æ–∂–∫–∞¬ª –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—è–∑–∞–Ω—ã —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–æ –Ω–∏–º.\n‚Ä¢	–í–µ–ª–æ—Å–∏–ø–µ–¥–∏—Å—Ç–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –µ–∑–¥–∏—Ç—å –ø–æ –∞–≤—Ç–æ–º–∞–≥–∏—Å—Ç—Ä–∞–ª—è–º, —Ç—Ä–æ—Ç—É–∞—Ä–∞–º (–≤–∑—Ä–æ—Å–ª—ã–º), –æ–±–æ—á–∏–Ω–∞–º –±–µ–∑ –∫—Ä–∞–π–Ω–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
    },
]


from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes

def get_railways_text(theory, index, total):
    return f"*{theory['name']}*\n\n{theory['description']}\n\n–¢–µ–æ—Ä–∏—è {index + 1} –∏–∑ {total}"

user_message_ids = {}


def get_railways_keyboard(index, total):
    buttons = []

    if index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"railways_{index - 1}"))

    if index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"railways_{index + 1}"))

    if index == total - 1:
        buttons.append(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É", callback_data=f"start_test"))

    # –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
    buttons.append(InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data="back_to_topics"))

    return InlineKeyboardMarkup([buttons])


async def show_railways(update, context: ContextTypes.DEFAULT_TYPE, index: int):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    if index < 0 or index >= len(main_railways):
        await context.bot.send_message(chat_id, "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        return

    theory = main_railways[index]
    text = get_railways_text(theory, index, len(main_railways))
    keyboard = get_railways_keyboard(index, len(main_railways))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
    if user_id in user_message_ids:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=user_message_ids[user_id])
        except:
            pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    sent = await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

    user_message_ids[user_id] = sent.message_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫: "–î–∞–ª–µ–µ", "–ù–∞–∑–∞–¥", "–í –º–µ–Ω—é"
async def handle_railways_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("railways_"):
        try:
            index = int(data.split("_")[1])
            await show_railways(update, context, index)
        except ValueError:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    elif data == "back_to_topics":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
        from main import get_topics_keyboard
        chat_id = query.message.chat_id
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:",
            reply_markup=get_topics_keyboard()
        )