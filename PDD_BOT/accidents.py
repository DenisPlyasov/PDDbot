from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import ContextTypes
import os
import random


main_accidents = [
    {
        "name": "üî∏ 1. –ù–µ–º–Ω–æ–≥–æ —Ç–µ–æ—Ä–∏–∏",
        "description": f"–î–¢–ü ‚Äî —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Å —É—á–∞—Å—Ç–∏–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–µ, –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –∏–ª–∏ —É—â–µ—Ä–±.\n–ü–æ–∫–∏–¥–∞—Ç—å –º–µ—Å—Ç–æ –î–¢–ü –±–µ–∑ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã ‚Äî —ç—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏—à–µ–Ω–∏–µ –ø—Ä–∞–≤.",
    },
    {
        "name": "üî∏ 2. –ï—Å–ª–∏ —Ç—ã –ø–æ–ø–∞–ª –≤ –∞–≤–∞—Ä–∏—é, —Å–¥–µ–ª–∞–π —Å–ª–µ–¥—É—é—â–µ–µ:",
        "description": f"1.	–û—Å—Ç–∞–Ω–æ–≤–∏—Å—å –∏ –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–π –¢–°.—ë—Ç2.	–í–∫–ª—é—á–∏ –∞–≤–∞—Ä–∏–π–Ω—É—é —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é –∏ —É—Å—Ç–∞–Ω–æ–≤–∏ –∑–Ω–∞–∫ –∞–≤–∞—Ä–∏–π–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (–≤ –≥–æ—Ä–æ–¥–µ ‚Äî 15 –º, –≤–Ω–µ –≥–æ—Ä–æ–¥–∞ ‚Äî 30 –º).\n3.	–£–±–µ–¥–∏—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –Ω–µ—Ç –ª–∏ —É–≥—Ä–æ–∑—ã –≤–∑—Ä—ã–≤–∞, –ø–æ–∂–∞—Ä–∞, –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n4.	–û–∫–∞–∂–∏ –ø–µ—Ä–≤—É—é –ø–æ–º–æ—â—å –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –∏ –≤—ã–∑–æ–≤–∏ —Å–∫–æ—Ä—É—é, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.\n5.	–°–æ–æ–±—â–∏ –≤ –ø–æ–ª–∏—Ü–∏—é (–ì–ò–ë–î–î) –æ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏.\n6.	–ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π –∞–≤–∞—Ä–∏—é: —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π –∏ —Å—Ö–µ–º–∞ –î–¢–ü.\n7.	–ù–µ –ø–æ–∫–∏–¥–∞–π –º–µ—Å—Ç–æ –î–¢–ü –¥–æ –ø—Ä–∏–±—ã—Ç–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –µ—Å–ª–∏ –Ω–µ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ –µ–≤—Ä–æ–ø—Ä–æ—Ç–æ–∫–æ–ª—É.",
    },
    {
        "name": "üî∏ 3. –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ –µ–≤—Ä–æ–ø—Ä–æ—Ç–æ–∫–æ–ª—É:",
        "description": f"‚Ä¢	–ù–µ—Ç –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö.\n‚Ä¢	–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ 2 –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n‚Ä¢	–£—â–µ—Ä–± –¥–æ 400 000 —Ä—É–±. (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –û–°–ê–ì–û).\n‚Ä¢	–í–æ–¥–∏—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –∏ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –±–ª–∞–Ω–∫ –∏–∑–≤–µ—â–µ–Ω–∏—è –æ –î–¢–ü.",
    },
]


from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes

def get_lights_text(theory, index, total):
    return f"*{theory['name']}*\n\n{theory['description']}\n\n–¢–µ–æ—Ä–∏—è {index + 1} –∏–∑ {total}"

user_message_ids = {}


def get_accidents_keyboard(index, total):
    buttons = []

    if index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"accidents_{index - 1}"))

    if index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"accidents_{index + 1}"))

    if index == total - 1:
        buttons.append(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É", callback_data=f"start_test"))

    # –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
    buttons.append(InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data="back_to_topics"))

    return InlineKeyboardMarkup([buttons])


async def show_accidents(update, context: ContextTypes.DEFAULT_TYPE, index: int):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    if index < 0 or index >= len(main_accidents):
        await context.bot.send_message(chat_id, "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        return

    theory = main_accidents[index]
    text = get_lights_text(theory, index, len(main_accidents))
    keyboard = get_accidents_keyboard(index, len(main_accidents))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
    if user_id in user_message_ids:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=user_message_ids[user_id])
        except:
            pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    sent = await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

    user_message_ids[user_id] = sent.message_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫: "–î–∞–ª–µ–µ", "–ù–∞–∑–∞–¥", "–í –º–µ–Ω—é"
async def handle_accidents_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("accidents_"):
        try:
            index = int(data.split("_")[1])
            await show_accidents(update, context, index)
        except ValueError:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    elif data == "back_to_topics":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
        from main import get_topics_keyboard
        chat_id = query.message.chat_id
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:",
            reply_markup=get_topics_keyboard()
        )