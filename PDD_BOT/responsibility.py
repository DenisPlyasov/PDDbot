from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import ContextTypes
import os
import random


main_responsibilities = [
    {
        "name": "üî∏ 1. –ù–µ–º–Ω–æ–≥–æ —Ç–µ–æ—Ä–∏–∏",
        "description": f"–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –í—ã —É–∂–µ –∏–∑—É—á–∏–ª–∏. –ù–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ - –∏ –≤—Å–µ –±—É–¥–µ—Ç –æ–∫–µ–π. –û—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –∏ —É–≥–æ–ª–æ–≤–Ω–æ–π, —Ç–∞–∫ –∂–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã —à—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è",
    },
    {
        "name": "üî∏ 2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        "description": f"‚Ä¢  	–ù–∞—Å—Ç—É–ø–∞–µ—Ç –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª, –Ω–µ –ø–æ–≤–ª—ë–∫—à–µ–µ —Ç—è–∂–∫–∏—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π. –ú–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å —à—Ç—Ä–∞—Ñ—ã, –ª–∏—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∞—Ä–µ—Å—Ç –¥–æ 15 —Å—É—Ç–æ–∫ –∏ –∏–∑—ä—è—Ç–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–µ—Ü—Å–∏–≥–Ω–∞–ª–æ–≤)\n\n‚Ä¢  	–†–∞–∑–º–µ—Ä—ã —à—Ç—Ä–∞—Ñ–æ–≤ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏ –ö–æ–ê–ü. –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞ –≤–æ–∂–¥–µ–Ω–∏–µ –≤ –Ω–µ—Ç—Ä–µ–∑–≤–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ ‚Äî —à—Ç—Ä–∞—Ñ –∏ –ª–∏—à–µ–Ω–∏–µ –ø—Ä–∞–≤, –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ ‚Äî –æ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π",
    },
    {
        "name": "üî∏ 3. –£–≥–æ–ª–æ–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        "description": f"‚Ä¢	  –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö –ü–î–î, –ø–æ–≤–ª–µ–∫—à–∏—Ö —Ç—è–∂–∫–∏–π –≤—Ä–µ–¥ –∑–¥–æ—Ä–æ–≤—å—é –∏–ª–∏ —Å–º–µ—Ä—Ç—å —á–µ–ª–æ–≤–µ–∫–∞.\n\n‚Ä¢  	–í–∫–ª—é—á–∞–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏—è –≤–ø–ª–æ—Ç—å –¥–æ –ª–∏—à–µ–Ω–∏—è —Å–≤–æ–±–æ–¥—ã –∏ –ª–∏—à–µ–Ω–∏—è –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏, –∫–∞–∫ –ø—Ä–æ–ø–∏—Å–∞–Ω–æ –≤ –£–ö –†–§, —Å—Ç. 264 –∏ –¥—Ä.",
    },
]


from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes

def get_responsibilities_text(theory, index, total):
    return f"*{theory['name']}*\n\n{theory['description']}\n\n–¢–µ–æ—Ä–∏—è {index + 1} –∏–∑ {total}"

user_message_ids = {}


def get_responsibilities_keyboard(index, total):
    buttons = []

    if index > 0:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"responsibilities_{index - 1}"))

    if index < total - 1:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"responsibilities_{index + 1}"))

    if index == total - 1:
        buttons.append(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É", callback_data=f"start_test"))

    # –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
    buttons.append(InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data="back_to_topics"))

    return InlineKeyboardMarkup([buttons])


async def show_responsibilities(update, context: ContextTypes.DEFAULT_TYPE, index: int):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id

    if index < 0 or index >= len(main_responsibilities):
        await context.bot.send_message(chat_id, "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        return

    theory = main_responsibilities[index]
    text = get_responsibilities_text(theory, index, len(main_responsibilities))
    keyboard = get_responsibilities_keyboard(index, len(main_responsibilities))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–æ
    if user_id in user_message_ids:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=user_message_ids[user_id])
        except:
            pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    sent = await context.bot.send_message(
        chat_id=chat_id,
        text=text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

    user_message_ids[user_id] = sent.message_id


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫: "–î–∞–ª–µ–µ", "–ù–∞–∑–∞–¥", "–í –º–µ–Ω—é"
async def handle_responsibilities_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data.startswith("responsibilities_"):
        try:
            index = int(data.split("_")[1])
            await show_responsibilities(update, context, index)
        except ValueError:
            await query.edit_message_text("–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
    elif data == "back_to_topics":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤—ã–∑–æ–≤ —Å–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏)
        from main import get_topics_keyboard
        chat_id = query.message.chat_id
        await context.bot.send_message(
            chat_id=chat_id,
            text="üìö –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º:",
            reply_markup=get_topics_keyboard()
        )